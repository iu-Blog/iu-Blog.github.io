<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>李峋同款爱心——[python版本]</title>
      <link href="/posts/fcac5372.html"/>
      <url>/posts/fcac5372.html</url>
      
        <content type="html"><![CDATA[<h1 id="李峋同款爱心代码"><a href="#李峋同款爱心代码" class="headerlink" title="李峋同款爱心代码"></a>李峋同款<strong>爱心</strong>代码</h1><h2 id="Python版本代码实例"><a href="#Python版本代码实例" class="headerlink" title="Python版本代码实例"></a><strong>Python</strong>版本代码实例</h2><p>作者的第一篇文章，希望对大家有用。</p><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p>我先给大家放效果图：<br><img src="https://pic3.zhimg.com/v2-f2570ff8be62cf1633c0222ade38ab02_b.webp" alt="李峋同款爱心" title="示例图片"></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>下面是代码部分：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> random<span class="token keyword">from</span> math <span class="token keyword">import</span> sin<span class="token punctuation">,</span> cos<span class="token punctuation">,</span> pi<span class="token punctuation">,</span> log<span class="token keyword">from</span> tkinter <span class="token keyword">import</span> <span class="token operator">*</span> CANVAS_WIDTH <span class="token operator">=</span> <span class="token number">640</span>  <span class="token comment" spellcheck="true"># 画布的宽</span>CANVAS_HEIGHT <span class="token operator">=</span> <span class="token number">640</span>  <span class="token comment" spellcheck="true"># 画布的高</span>CANVAS_CENTER_X <span class="token operator">=</span> CANVAS_WIDTH <span class="token operator">/</span> <span class="token number">2</span>  <span class="token comment" spellcheck="true"># 画布中心的X轴坐标</span>CANVAS_CENTER_Y <span class="token operator">=</span> CANVAS_HEIGHT <span class="token operator">/</span> <span class="token number">2</span>  <span class="token comment" spellcheck="true"># 画布中心的Y轴坐标</span>IMAGE_ENLARGE <span class="token operator">=</span> <span class="token number">11</span>  <span class="token comment" spellcheck="true"># 放大比例</span>HEART_COLOR <span class="token operator">=</span> <span class="token string">"#e77c8e"</span>  # 心的颜色#ff7171  <span class="token keyword">def</span> <span class="token function">heart_function</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> shrink_ratio<span class="token punctuation">:</span> float <span class="token operator">=</span> IMAGE_ENLARGE<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    “爱心函数生成器”    :param shrink_ratio: 放大比例    :param t: 参数    :return: 坐标    """</span>    <span class="token comment" spellcheck="true"># 基础函数</span>    x <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">*</span> <span class="token punctuation">(</span>sin<span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">3</span><span class="token punctuation">)</span>    y <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token number">13</span> <span class="token operator">*</span> cos<span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">5</span> <span class="token operator">*</span> cos<span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> t<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> cos<span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> t<span class="token punctuation">)</span> <span class="token operator">-</span> cos<span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> t<span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 放大</span>    x <span class="token operator">*=</span> shrink_ratio    y <span class="token operator">*=</span> shrink_ratio     <span class="token comment" spellcheck="true"># 移到画布中央</span>    x <span class="token operator">+=</span> CANVAS_CENTER_X    y <span class="token operator">+=</span> CANVAS_CENTER_Y     <span class="token keyword">return</span> int<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> int<span class="token punctuation">(</span>y<span class="token punctuation">)</span>  <span class="token keyword">def</span> <span class="token function">scatter_inside</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> beta<span class="token operator">=</span><span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    随机内部扩散    :param x: 原x    :param y: 原y    :param beta: 强度    :return: 新坐标    """</span>    ratio_x <span class="token operator">=</span> <span class="token operator">-</span> beta <span class="token operator">*</span> log<span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    ratio_y <span class="token operator">=</span> <span class="token operator">-</span> beta <span class="token operator">*</span> log<span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     dx <span class="token operator">=</span> ratio_x <span class="token operator">*</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> CANVAS_CENTER_X<span class="token punctuation">)</span>    dy <span class="token operator">=</span> ratio_y <span class="token operator">*</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> CANVAS_CENTER_Y<span class="token punctuation">)</span>     <span class="token keyword">return</span> x <span class="token operator">-</span> dx<span class="token punctuation">,</span> y <span class="token operator">-</span> dy  <span class="token keyword">def</span> <span class="token function">shrink</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> ratio<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    抖动    :param x: 原x    :param y: 原y    :param ratio: 比例    :return: 新坐标    """</span>    force <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">-</span> CANVAS_CENTER_X<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> CANVAS_CENTER_Y<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">0.6</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 这个参数...</span>    dx <span class="token operator">=</span> ratio <span class="token operator">*</span> force <span class="token operator">*</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> CANVAS_CENTER_X<span class="token punctuation">)</span>    dy <span class="token operator">=</span> ratio <span class="token operator">*</span> force <span class="token operator">*</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> CANVAS_CENTER_Y<span class="token punctuation">)</span>    <span class="token keyword">return</span> x <span class="token operator">-</span> dx<span class="token punctuation">,</span> y <span class="token operator">-</span> dy  <span class="token keyword">def</span> <span class="token function">curve</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    自定义曲线函数，调整跳动周期    :param p: 参数    :return: 正弦    """</span>    <span class="token comment" spellcheck="true"># 可以尝试换其他的动态函数，达到更有力量的效果（贝塞尔？）</span>    <span class="token keyword">return</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> sin<span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> pi<span class="token punctuation">)</span>  <span class="token keyword">class</span> <span class="token class-name">Heart</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    爱心类    """</span>     <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> generate_frame<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>_points <span class="token operator">=</span> set<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 原始爱心坐标集合</span>        self<span class="token punctuation">.</span>_edge_diffusion_points <span class="token operator">=</span> set<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 边缘扩散效果点坐标集合</span>        self<span class="token punctuation">.</span>_center_diffusion_points <span class="token operator">=</span> set<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 中心扩散效果点坐标集合</span>        self<span class="token punctuation">.</span>all_points <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token comment" spellcheck="true"># 每帧动态点坐标</span>        self<span class="token punctuation">.</span>build<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>random_halo <span class="token operator">=</span> <span class="token number">1000</span>         self<span class="token punctuation">.</span>generate_frame <span class="token operator">=</span> generate_frame        <span class="token keyword">for</span> frame <span class="token keyword">in</span> range<span class="token punctuation">(</span>generate_frame<span class="token punctuation">)</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>calc<span class="token punctuation">(</span>frame<span class="token punctuation">)</span>     <span class="token keyword">def</span> <span class="token function">build</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> number<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 爱心</span>        <span class="token keyword">for</span> _ <span class="token keyword">in</span> range<span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">:</span>            t <span class="token operator">=</span> random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> pi<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 随机不到的地方造成爱心有缺口</span>            x<span class="token punctuation">,</span> y <span class="token operator">=</span> heart_function<span class="token punctuation">(</span>t<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>_points<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment" spellcheck="true"># 爱心内扩散</span>        <span class="token keyword">for</span> _x<span class="token punctuation">,</span> _y <span class="token keyword">in</span> list<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_points<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> _ <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                x<span class="token punctuation">,</span> y <span class="token operator">=</span> scatter_inside<span class="token punctuation">(</span>_x<span class="token punctuation">,</span> _y<span class="token punctuation">,</span> <span class="token number">0.05</span><span class="token punctuation">)</span>                self<span class="token punctuation">.</span>_edge_diffusion_points<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment" spellcheck="true"># 爱心内再次扩散</span>        point_list <span class="token operator">=</span> list<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_points<span class="token punctuation">)</span>        <span class="token keyword">for</span> _ <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            x<span class="token punctuation">,</span> y <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>point_list<span class="token punctuation">)</span>            x<span class="token punctuation">,</span> y <span class="token operator">=</span> scatter_inside<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">0.17</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>_center_diffusion_points<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>     @staticmethod    <span class="token keyword">def</span> <span class="token function">calc_position</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> ratio<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 调整缩放比例</span>        force <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">-</span> CANVAS_CENTER_X<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> CANVAS_CENTER_Y<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">0.520</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 魔法参数</span>         dx <span class="token operator">=</span> ratio <span class="token operator">*</span> force <span class="token operator">*</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> CANVAS_CENTER_X<span class="token punctuation">)</span> <span class="token operator">+</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        dy <span class="token operator">=</span> ratio <span class="token operator">*</span> force <span class="token operator">*</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> CANVAS_CENTER_Y<span class="token punctuation">)</span> <span class="token operator">+</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>         <span class="token keyword">return</span> x <span class="token operator">-</span> dx<span class="token punctuation">,</span> y <span class="token operator">-</span> dy     <span class="token keyword">def</span> <span class="token function">calc</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> generate_frame<span class="token punctuation">)</span><span class="token punctuation">:</span>        ratio <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">*</span> curve<span class="token punctuation">(</span>generate_frame <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">*</span> pi<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 圆滑的周期的缩放比例</span>         halo_radius <span class="token operator">=</span> int<span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> curve<span class="token punctuation">(</span>generate_frame <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">*</span> pi<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        halo_number <span class="token operator">=</span> int<span class="token punctuation">(</span><span class="token number">3000</span> <span class="token operator">+</span> <span class="token number">4000</span> <span class="token operator">*</span> abs<span class="token punctuation">(</span>curve<span class="token punctuation">(</span>generate_frame <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">*</span> pi<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         all_points <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>         <span class="token comment" spellcheck="true"># 光环</span>        heart_halo_point <span class="token operator">=</span> set<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 光环的点坐标集合</span>        <span class="token keyword">for</span> _ <span class="token keyword">in</span> range<span class="token punctuation">(</span>halo_number<span class="token punctuation">)</span><span class="token punctuation">:</span>            t <span class="token operator">=</span> random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> pi<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 随机不到的地方造成爱心有缺口</span>            x<span class="token punctuation">,</span> y <span class="token operator">=</span> heart_function<span class="token punctuation">(</span>t<span class="token punctuation">,</span> shrink_ratio<span class="token operator">=</span><span class="token number">11.6</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 魔法参数</span>            x<span class="token punctuation">,</span> y <span class="token operator">=</span> shrink<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> halo_radius<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token keyword">in</span> heart_halo_point<span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># 处理新的点</span>                heart_halo_point<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>                x <span class="token operator">+=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span>                y <span class="token operator">+=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span>                size <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                all_points<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment" spellcheck="true"># 轮廓</span>        <span class="token keyword">for</span> x<span class="token punctuation">,</span> y <span class="token keyword">in</span> self<span class="token punctuation">.</span>_points<span class="token punctuation">:</span>            x<span class="token punctuation">,</span> y <span class="token operator">=</span> self<span class="token punctuation">.</span>calc_position<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> ratio<span class="token punctuation">)</span>            size <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>            all_points<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment" spellcheck="true"># 内容</span>        <span class="token keyword">for</span> x<span class="token punctuation">,</span> y <span class="token keyword">in</span> self<span class="token punctuation">.</span>_edge_diffusion_points<span class="token punctuation">:</span>            x<span class="token punctuation">,</span> y <span class="token operator">=</span> self<span class="token punctuation">.</span>calc_position<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> ratio<span class="token punctuation">)</span>            size <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>            all_points<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token keyword">for</span> x<span class="token punctuation">,</span> y <span class="token keyword">in</span> self<span class="token punctuation">.</span>_center_diffusion_points<span class="token punctuation">:</span>            x<span class="token punctuation">,</span> y <span class="token operator">=</span> self<span class="token punctuation">.</span>calc_position<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> ratio<span class="token punctuation">)</span>            size <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>            all_points<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>all_points<span class="token punctuation">[</span>generate_frame<span class="token punctuation">]</span> <span class="token operator">=</span> all_points     <span class="token keyword">def</span> <span class="token function">render</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> render_canvas<span class="token punctuation">,</span> render_frame<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> size <span class="token keyword">in</span> self<span class="token punctuation">.</span>all_points<span class="token punctuation">[</span>render_frame <span class="token operator">%</span> self<span class="token punctuation">.</span>generate_frame<span class="token punctuation">]</span><span class="token punctuation">:</span>            render_canvas<span class="token punctuation">.</span>create_rectangle<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> x <span class="token operator">+</span> size<span class="token punctuation">,</span> y <span class="token operator">+</span> size<span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> fill<span class="token operator">=</span>HEART_COLOR<span class="token punctuation">)</span>  <span class="token keyword">def</span> <span class="token function">draw</span><span class="token punctuation">(</span>main<span class="token punctuation">:</span> Tk<span class="token punctuation">,</span> render_canvas<span class="token punctuation">:</span> Canvas<span class="token punctuation">,</span> render_heart<span class="token punctuation">:</span> Heart<span class="token punctuation">,</span> render_frame<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    render_canvas<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token string">'all'</span><span class="token punctuation">)</span>    render_heart<span class="token punctuation">.</span>render<span class="token punctuation">(</span>render_canvas<span class="token punctuation">,</span> render_frame<span class="token punctuation">)</span>    main<span class="token punctuation">.</span>after<span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span> draw<span class="token punctuation">,</span> main<span class="token punctuation">,</span> render_canvas<span class="token punctuation">,</span> render_heart<span class="token punctuation">,</span> render_frame <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    root <span class="token operator">=</span> Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 一个Tk</span>    root<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'宝贝爱你哟'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#将标题设置为'tkinter'</span>    canvas <span class="token operator">=</span> Canvas<span class="token punctuation">(</span>root<span class="token punctuation">,</span> bg<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">,</span> height<span class="token operator">=</span>CANVAS_HEIGHT<span class="token punctuation">,</span> width<span class="token operator">=</span>CANVAS_WIDTH<span class="token punctuation">)</span>    canvas<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>    heart <span class="token operator">=</span> Heart<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 心</span>    draw<span class="token punctuation">(</span>root<span class="token punctuation">,</span> canvas<span class="token punctuation">,</span> heart<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 开始画</span>    root<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
